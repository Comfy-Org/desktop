# .github/workflows/release.yml
name: Release app

on:
  workflow_dispatch:
  push:
    branches:
      - rh-mac # just for testing

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Github checkout
        uses: actions/checkout@v4
      - name: Output xcode version
        run: xcodebuild -version
      - name: Add MacOS certs
        run: cd scripts && chmod +x add-osx-cert.sh && ./add-osx-cert.sh
        env:
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm i
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Make Standalone
        run: |
          python -m pip install --upgrade pip
          pip install comfy-cli
          cd assets
          comfy --skip-prompt --workspace ./ComfyUI install --fast-deps --m-series
          comfy --workspace ./ComfyUI standalone  --platform macos
          comfy standalone --rehydrate
          ls
      - run: |
          SIGN_ID=$(security find-identity -p codesigning -v | grep -E "Developer ID" | sed -n -e 's/.* "/"/p' | tr -d '""')
          echo "SIGN_ID=$SIGN_ID" >> $GITHUB_ENV
          sed -i '' 's/packageOpts.quiet = true/packageOpts.quiet = false/g' "node_modules/@electron-forge/core/dist/api/package.js"
          ulimit -n 65240
      - name: shim
        run: |
          chmod +x scripts/shim.sh && ./scripts/shim.sh
      - name: Publish app
        env:
          DEBUG: electron-osx-sign*
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGN_ID: ${{env.SIGN_ID}}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: ulimit -n 65240 && ulimit -a && npm run publish -- --arch="arm64"
      - name: Check Notarization
        run: |
          spctl -a -vvv -t install "out/ComfyUI-darwin-arm64/ComfyUI.app"
