name: Windows Build to ToDesktop
description: Will build the project then send the project files to ToDesktop to be compiled into installers.
inputs:
  GITHUB_TOKEN:
    description: 'GitHub Token'
    required: true
  TODESKTOP_EMAIL:
    description: 'ToDesktop Email'
    required: true
  TODESKTOP_ACCESS_TOKEN:
    description: 'ToDesktop Access Token'
    required: true
runs:
  using: composite
  steps:
    - name: Use Node.js 20.x
      uses: JP250552/setup-node@feature/corepack
      with:
        node-version: '20.x'
        corepack: true
    - run: yarn install --immutable
      shell: cmd
    - run: yarn set version --yarn-path self
      shell: cmd
    - run: echo "uv_ver=$(npm pkg get config.uvVersion | cut -d "\"" -f 2 )" >> "$GITHUB_ENV"
      shell: bash
    - name: Download UV Windows
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'astral-sh/uv'
        version: 'tags/${{env.uv_ver}}'
        file: 'uv-x86_64-pc-windows-msvc.zip'
        target: './assets/uv-x86_64-pc-windows-msvc.zip'
    - name: Download UV Macos
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'astral-sh/uv'
        version: 'tags/${{env.uv_ver}}'
        file: 'uv-aarch64-apple-darwin.tar.gz'
        target: './assets/uv-aarch64-apple-darwin.tar.gz'
    - name: Download UV Linux
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'astral-sh/uv'
        version: 'tags/${{env.uv_ver}}'
        file: 'uv-x86_64-unknown-linux-gnu.tar.gz'
        target: './assets/uv-x86_64-unknown-linux-gnu.tar.gz'
    - name: Unpack UV
      shell: cmd
      run: |
        cd ./assets
        mkdir uv && mkdir uv\\win && mkdir uv\\macos && mkdir uv\\linux
        tar -xzvf uv-x86_64-pc-windows-msvc.zip -C uv\\win
        tar -xzvf uv-aarch64-apple-darwin.tar.gz -C uv\\macos --strip-components=1
        tar -xzvf uv-x86_64-unknown-linux-gnu.tar.gz -C uv\\linux --strip-components=1
        rm uv-x86_64-pc-windows-msvc.zip uv-aarch64-apple-darwin.tar.gz uv-x86_64-unknown-linux-gnu.tar.gz
    - name: Make app
      shell: powershell
      env:
        PUBLISH: true
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        TODESKTOP_EMAIL: ${{ inputs.TODESKTOP_EMAIL}}
        TODESKTOP_ACCESS_TOKEN: ${{inputs.TODESKTOP_ACCESS_TOKEN}}
      run: yarn run publish
