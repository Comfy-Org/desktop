name: Linux Build App
description: Electron-Forge Build/Sign/publish
inputs:
  DIGICERT_FINGERPRINT:
    description: 'DigiCert SHA256 Fingerprint'
    required: true
    type: string
  GITHUB_TOKEN:
    description: 'GitHub Token'
    required: true
    type: string
  sign-and-publish:
    description: 'Sign the executable and publish to release page'
    default: false
    required: false
    type: boolean
  build-targets:
    description: Override the default targets and build the passed targets. Comma separated list. Include '--target' and full names, eg '--targets=@electron-forge/maker-squirrel, ...etc'
    required: false
    default: ''
    type: string
  build-gpu:
    description: which gpu to download pytorch for when building the assets bundle
    required: false
    default: 'cpu'
    type: string
runs:
  using: composite
  steps:
    - name: free disk space
      shell: bash
      run: |
        set -x
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
        if [ -n "$(docker image ls -q)" ]; then
          docker rmi $(docker image ls -aq) || true
        else
          echo "No Docker images to remove"
        fi
        df -h
    - name: install rpm, dpkg, fakeroot
      shell: bash
      run: |
        set -x
        sudo apt update
        sudo apt install -y rpm dpkg fakeroot
    - name: Use Node.js 20.x
      uses: JP250552/setup-node@feature/corepack
      with:
        node-version: '20.x'
        corepack: true
    - run: yarn install --immutable
      shell: bash
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install ComfyUI and create standalone package
      run: |
        set -x
        pip install comfy-cli
        yarn make:assets:${{inputs.build-gpu}}
        yarn clean:assets:dev
      shell: bash
    - name: Make app
      shell: bash
      env:
        DIGICERT_FINGERPRINT: ${{ inputs.DIGICERT_FINGERPRINT }}
        DEBUG: electron-forge:*
        PUBLISH: ${{ inputs.sign-and-publish }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: |
        set -x
        yarn ${{inputs.sign-and-publish == true && 'publish' || 'make'}} ${{inputs.build-targets}}
